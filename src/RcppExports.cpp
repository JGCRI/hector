// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// GETDATA
String GETDATA();
RcppExport SEXP _hector_GETDATA() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(GETDATA());
    return rcpp_result_gen;
END_RCPP
}
// SETDATA
String SETDATA();
RcppExport SEXP _hector_SETDATA() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(SETDATA());
    return rcpp_result_gen;
END_RCPP
}
// BIOME_SPLIT_CHAR
String BIOME_SPLIT_CHAR();
RcppExport SEXP _hector_BIOME_SPLIT_CHAR() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(BIOME_SPLIT_CHAR());
    return rcpp_result_gen;
END_RCPP
}
// LL_DEBUG
int LL_DEBUG();
RcppExport SEXP _hector_LL_DEBUG() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(LL_DEBUG());
    return rcpp_result_gen;
END_RCPP
}
// LL_NOTICE
int LL_NOTICE();
RcppExport SEXP _hector_LL_NOTICE() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(LL_NOTICE());
    return rcpp_result_gen;
END_RCPP
}
// LL_WARNING
int LL_WARNING();
RcppExport SEXP _hector_LL_WARNING() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(LL_WARNING());
    return rcpp_result_gen;
END_RCPP
}
// LL_SEVERE
int LL_SEVERE();
RcppExport SEXP _hector_LL_SEVERE() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(LL_SEVERE());
    return rcpp_result_gen;
END_RCPP
}
// TRACKING_DATE
String TRACKING_DATE();
RcppExport SEXP _hector_TRACKING_DATE() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TRACKING_DATE());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_BC
String EMISSIONS_BC();
RcppExport SEXP _hector_EMISSIONS_BC() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_BC());
    return rcpp_result_gen;
END_RCPP
}
// RF_TOTAL
String RF_TOTAL();
RcppExport SEXP _hector_RF_TOTAL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_TOTAL());
    return rcpp_result_gen;
END_RCPP
}
// FTOT_CONSTRAIN
String FTOT_CONSTRAIN();
RcppExport SEXP _hector_FTOT_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(FTOT_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// RF_ALBEDO
String RF_ALBEDO();
RcppExport SEXP _hector_RF_ALBEDO() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_ALBEDO());
    return rcpp_result_gen;
END_RCPP
}
// RF_CO2
String RF_CO2();
RcppExport SEXP _hector_RF_CO2() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_CO2());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_CO2
String DELTA_CO2();
RcppExport SEXP _hector_DELTA_CO2() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_CO2());
    return rcpp_result_gen;
END_RCPP
}
// RF_N2O
String RF_N2O();
RcppExport SEXP _hector_RF_N2O() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_N2O());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_N2O
String DELTA_N2O();
RcppExport SEXP _hector_DELTA_N2O() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_N2O());
    return rcpp_result_gen;
END_RCPP
}
// RF_H2O_STRAT
String RF_H2O_STRAT();
RcppExport SEXP _hector_RF_H2O_STRAT() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_H2O_STRAT());
    return rcpp_result_gen;
END_RCPP
}
// RF_O3_TROP
String RF_O3_TROP();
RcppExport SEXP _hector_RF_O3_TROP() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_O3_TROP());
    return rcpp_result_gen;
END_RCPP
}
// RF_BC
String RF_BC();
RcppExport SEXP _hector_RF_BC() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_BC());
    return rcpp_result_gen;
END_RCPP
}
// RHO_BC
String RHO_BC();
RcppExport SEXP _hector_RHO_BC() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_BC());
    return rcpp_result_gen;
END_RCPP
}
// RF_OC
String RF_OC();
RcppExport SEXP _hector_RF_OC() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_OC());
    return rcpp_result_gen;
END_RCPP
}
// RHO_OC
String RHO_OC();
RcppExport SEXP _hector_RHO_OC() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_OC());
    return rcpp_result_gen;
END_RCPP
}
// RF_NH3
String RF_NH3();
RcppExport SEXP _hector_RF_NH3() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_NH3());
    return rcpp_result_gen;
END_RCPP
}
// RHO_NH3
String RHO_NH3();
RcppExport SEXP _hector_RHO_NH3() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_NH3());
    return rcpp_result_gen;
END_RCPP
}
// RF_SO2
String RF_SO2();
RcppExport SEXP _hector_RF_SO2() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_SO2());
    return rcpp_result_gen;
END_RCPP
}
// RF_ACI
String RF_ACI();
RcppExport SEXP _hector_RF_ACI() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_ACI());
    return rcpp_result_gen;
END_RCPP
}
// RHO_SO2
String RHO_SO2();
RcppExport SEXP _hector_RHO_SO2() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_SO2());
    return rcpp_result_gen;
END_RCPP
}
// RF_VOL
String RF_VOL();
RcppExport SEXP _hector_RF_VOL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_VOL());
    return rcpp_result_gen;
END_RCPP
}
// RF_MISC
String RF_MISC();
RcppExport SEXP _hector_RF_MISC() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_MISC());
    return rcpp_result_gen;
END_RCPP
}
// RFADJ_PREFIX
String RFADJ_PREFIX();
RcppExport SEXP _hector_RFADJ_PREFIX() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RFADJ_PREFIX());
    return rcpp_result_gen;
END_RCPP
}
// RF_PREFIX
String RF_PREFIX();
RcppExport SEXP _hector_RF_PREFIX() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_PREFIX());
    return rcpp_result_gen;
END_RCPP
}
// RF_CF4
String RF_CF4();
RcppExport SEXP _hector_RF_CF4() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_CF4());
    return rcpp_result_gen;
END_RCPP
}
// RF_C2F6
String RF_C2F6();
RcppExport SEXP _hector_RF_C2F6() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_C2F6());
    return rcpp_result_gen;
END_RCPP
}
// RF_HFC23
String RF_HFC23();
RcppExport SEXP _hector_RF_HFC23() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_HFC23());
    return rcpp_result_gen;
END_RCPP
}
// RF_HFC32
String RF_HFC32();
RcppExport SEXP _hector_RF_HFC32() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_HFC32());
    return rcpp_result_gen;
END_RCPP
}
// RF_HFC4310
String RF_HFC4310();
RcppExport SEXP _hector_RF_HFC4310() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_HFC4310());
    return rcpp_result_gen;
END_RCPP
}
// RF_HFC125
String RF_HFC125();
RcppExport SEXP _hector_RF_HFC125() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_HFC125());
    return rcpp_result_gen;
END_RCPP
}
// RF_HFC134A
String RF_HFC134A();
RcppExport SEXP _hector_RF_HFC134A() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_HFC134A());
    return rcpp_result_gen;
END_RCPP
}
// RF_HFC143A
String RF_HFC143A();
RcppExport SEXP _hector_RF_HFC143A() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_HFC143A());
    return rcpp_result_gen;
END_RCPP
}
// RF_HFC227EA
String RF_HFC227EA();
RcppExport SEXP _hector_RF_HFC227EA() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_HFC227EA());
    return rcpp_result_gen;
END_RCPP
}
// RF_HFC245FA
String RF_HFC245FA();
RcppExport SEXP _hector_RF_HFC245FA() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_HFC245FA());
    return rcpp_result_gen;
END_RCPP
}
// RF_SF6
String RF_SF6();
RcppExport SEXP _hector_RF_SF6() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_SF6());
    return rcpp_result_gen;
END_RCPP
}
// RF_CFC11
String RF_CFC11();
RcppExport SEXP _hector_RF_CFC11() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_CFC11());
    return rcpp_result_gen;
END_RCPP
}
// RF_CFC12
String RF_CFC12();
RcppExport SEXP _hector_RF_CFC12() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_CFC12());
    return rcpp_result_gen;
END_RCPP
}
// RF_CFC113
String RF_CFC113();
RcppExport SEXP _hector_RF_CFC113() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_CFC113());
    return rcpp_result_gen;
END_RCPP
}
// RF_CFC114
String RF_CFC114();
RcppExport SEXP _hector_RF_CFC114() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_CFC114());
    return rcpp_result_gen;
END_RCPP
}
// RF_CFC115
String RF_CFC115();
RcppExport SEXP _hector_RF_CFC115() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_CFC115());
    return rcpp_result_gen;
END_RCPP
}
// RF_CCL4
String RF_CCL4();
RcppExport SEXP _hector_RF_CCL4() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_CCL4());
    return rcpp_result_gen;
END_RCPP
}
// RF_CH3CCL3
String RF_CH3CCL3();
RcppExport SEXP _hector_RF_CH3CCL3() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_CH3CCL3());
    return rcpp_result_gen;
END_RCPP
}
// RF_HCFC22
String RF_HCFC22();
RcppExport SEXP _hector_RF_HCFC22() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_HCFC22());
    return rcpp_result_gen;
END_RCPP
}
// RF_HCFC141B
String RF_HCFC141B();
RcppExport SEXP _hector_RF_HCFC141B() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_HCFC141B());
    return rcpp_result_gen;
END_RCPP
}
// RF_HCFC142B
String RF_HCFC142B();
RcppExport SEXP _hector_RF_HCFC142B() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_HCFC142B());
    return rcpp_result_gen;
END_RCPP
}
// RF_HALON1211
String RF_HALON1211();
RcppExport SEXP _hector_RF_HALON1211() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_HALON1211());
    return rcpp_result_gen;
END_RCPP
}
// RF_HALON1301
String RF_HALON1301();
RcppExport SEXP _hector_RF_HALON1301() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_HALON1301());
    return rcpp_result_gen;
END_RCPP
}
// RF_HALON2402
String RF_HALON2402();
RcppExport SEXP _hector_RF_HALON2402() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_HALON2402());
    return rcpp_result_gen;
END_RCPP
}
// RF_CH3CL
String RF_CH3CL();
RcppExport SEXP _hector_RF_CH3CL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_CH3CL());
    return rcpp_result_gen;
END_RCPP
}
// RF_CH3BR
String RF_CH3BR();
RcppExport SEXP _hector_RF_CH3BR() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_CH3BR());
    return rcpp_result_gen;
END_RCPP
}
// RHO_CF4
String RHO_CF4();
RcppExport SEXP _hector_RHO_CF4() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_CF4());
    return rcpp_result_gen;
END_RCPP
}
// RHO_C2F6
String RHO_C2F6();
RcppExport SEXP _hector_RHO_C2F6() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_C2F6());
    return rcpp_result_gen;
END_RCPP
}
// RHO_HFC23
String RHO_HFC23();
RcppExport SEXP _hector_RHO_HFC23() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_HFC23());
    return rcpp_result_gen;
END_RCPP
}
// RHO_HFC32
String RHO_HFC32();
RcppExport SEXP _hector_RHO_HFC32() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_HFC32());
    return rcpp_result_gen;
END_RCPP
}
// RHO_HFC4310
String RHO_HFC4310();
RcppExport SEXP _hector_RHO_HFC4310() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_HFC4310());
    return rcpp_result_gen;
END_RCPP
}
// RHO_HFC125
String RHO_HFC125();
RcppExport SEXP _hector_RHO_HFC125() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_HFC125());
    return rcpp_result_gen;
END_RCPP
}
// RHO_HFC134A
String RHO_HFC134A();
RcppExport SEXP _hector_RHO_HFC134A() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_HFC134A());
    return rcpp_result_gen;
END_RCPP
}
// RHO_HFC143A
String RHO_HFC143A();
RcppExport SEXP _hector_RHO_HFC143A() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_HFC143A());
    return rcpp_result_gen;
END_RCPP
}
// RHO_HFC227EA
String RHO_HFC227EA();
RcppExport SEXP _hector_RHO_HFC227EA() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_HFC227EA());
    return rcpp_result_gen;
END_RCPP
}
// RHO_HFC245FA
String RHO_HFC245FA();
RcppExport SEXP _hector_RHO_HFC245FA() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_HFC245FA());
    return rcpp_result_gen;
END_RCPP
}
// RHO_SF6
String RHO_SF6();
RcppExport SEXP _hector_RHO_SF6() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_SF6());
    return rcpp_result_gen;
END_RCPP
}
// RHO_CFC11
String RHO_CFC11();
RcppExport SEXP _hector_RHO_CFC11() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_CFC11());
    return rcpp_result_gen;
END_RCPP
}
// RHO_CFC12
String RHO_CFC12();
RcppExport SEXP _hector_RHO_CFC12() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_CFC12());
    return rcpp_result_gen;
END_RCPP
}
// RHO_CFC113
String RHO_CFC113();
RcppExport SEXP _hector_RHO_CFC113() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_CFC113());
    return rcpp_result_gen;
END_RCPP
}
// RHO_CFC114
String RHO_CFC114();
RcppExport SEXP _hector_RHO_CFC114() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_CFC114());
    return rcpp_result_gen;
END_RCPP
}
// RHO_CFC115
String RHO_CFC115();
RcppExport SEXP _hector_RHO_CFC115() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_CFC115());
    return rcpp_result_gen;
END_RCPP
}
// RHO_CCL4
String RHO_CCL4();
RcppExport SEXP _hector_RHO_CCL4() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_CCL4());
    return rcpp_result_gen;
END_RCPP
}
// RHO_CH3CCL3
String RHO_CH3CCL3();
RcppExport SEXP _hector_RHO_CH3CCL3() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_CH3CCL3());
    return rcpp_result_gen;
END_RCPP
}
// RHO_HCFC22
String RHO_HCFC22();
RcppExport SEXP _hector_RHO_HCFC22() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_HCFC22());
    return rcpp_result_gen;
END_RCPP
}
// RHO_HCFC141B
String RHO_HCFC141B();
RcppExport SEXP _hector_RHO_HCFC141B() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_HCFC141B());
    return rcpp_result_gen;
END_RCPP
}
// RHO_HCFC142B
String RHO_HCFC142B();
RcppExport SEXP _hector_RHO_HCFC142B() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_HCFC142B());
    return rcpp_result_gen;
END_RCPP
}
// RHO_HALON1211
String RHO_HALON1211();
RcppExport SEXP _hector_RHO_HALON1211() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_HALON1211());
    return rcpp_result_gen;
END_RCPP
}
// RHO_HALON1301
String RHO_HALON1301();
RcppExport SEXP _hector_RHO_HALON1301() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_HALON1301());
    return rcpp_result_gen;
END_RCPP
}
// RHO_HALON2402
String RHO_HALON2402();
RcppExport SEXP _hector_RHO_HALON2402() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_HALON2402());
    return rcpp_result_gen;
END_RCPP
}
// RHO_CH3CL
String RHO_CH3CL();
RcppExport SEXP _hector_RHO_CH3CL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_CH3CL());
    return rcpp_result_gen;
END_RCPP
}
// RHO_CH3BR
String RHO_CH3BR();
RcppExport SEXP _hector_RHO_CH3BR() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RHO_CH3BR());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_CF4
String DELTA_CF4();
RcppExport SEXP _hector_DELTA_CF4() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_CF4());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_C2F6
String DELTA_C2F6();
RcppExport SEXP _hector_DELTA_C2F6() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_C2F6());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_HFC23
String DELTA_HFC23();
RcppExport SEXP _hector_DELTA_HFC23() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_HFC23());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_HFC32
String DELTA_HFC32();
RcppExport SEXP _hector_DELTA_HFC32() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_HFC32());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_HFC4310
String DELTA_HFC4310();
RcppExport SEXP _hector_DELTA_HFC4310() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_HFC4310());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_HFC125
String DELTA_HFC125();
RcppExport SEXP _hector_DELTA_HFC125() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_HFC125());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_HFC134A
String DELTA_HFC134A();
RcppExport SEXP _hector_DELTA_HFC134A() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_HFC134A());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_HFC143A
String DELTA_HFC143A();
RcppExport SEXP _hector_DELTA_HFC143A() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_HFC143A());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_HFC227EA
String DELTA_HFC227EA();
RcppExport SEXP _hector_DELTA_HFC227EA() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_HFC227EA());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_HFC245FA
String DELTA_HFC245FA();
RcppExport SEXP _hector_DELTA_HFC245FA() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_HFC245FA());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_SF6
String DELTA_SF6();
RcppExport SEXP _hector_DELTA_SF6() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_SF6());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_CFC11
String DELTA_CFC11();
RcppExport SEXP _hector_DELTA_CFC11() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_CFC11());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_CFC12
String DELTA_CFC12();
RcppExport SEXP _hector_DELTA_CFC12() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_CFC12());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_CFC113
String DELTA_CFC113();
RcppExport SEXP _hector_DELTA_CFC113() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_CFC113());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_CFC114
String DELTA_CFC114();
RcppExport SEXP _hector_DELTA_CFC114() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_CFC114());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_CFC115
String DELTA_CFC115();
RcppExport SEXP _hector_DELTA_CFC115() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_CFC115());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_CCL4
String DELTA_CCL4();
RcppExport SEXP _hector_DELTA_CCL4() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_CCL4());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_CH3CCL3
String DELTA_CH3CCL3();
RcppExport SEXP _hector_DELTA_CH3CCL3() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_CH3CCL3());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_HCFC22
String DELTA_HCFC22();
RcppExport SEXP _hector_DELTA_HCFC22() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_HCFC22());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_HCFC141B
String DELTA_HCFC141B();
RcppExport SEXP _hector_DELTA_HCFC141B() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_HCFC141B());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_HCFC142B
String DELTA_HCFC142B();
RcppExport SEXP _hector_DELTA_HCFC142B() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_HCFC142B());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_HALON1211
String DELTA_HALON1211();
RcppExport SEXP _hector_DELTA_HALON1211() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_HALON1211());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_HALON1301
String DELTA_HALON1301();
RcppExport SEXP _hector_DELTA_HALON1301() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_HALON1301());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_HALON2402
String DELTA_HALON2402();
RcppExport SEXP _hector_DELTA_HALON2402() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_HALON2402());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_CH3CL
String DELTA_CH3CL();
RcppExport SEXP _hector_DELTA_CH3CL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_CH3CL());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_CH3BR
String DELTA_CH3BR();
RcppExport SEXP _hector_DELTA_CH3BR() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_CH3BR());
    return rcpp_result_gen;
END_RCPP
}
// Q_CO2
String Q_CO2();
RcppExport SEXP _hector_Q_CO2() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(Q_CO2());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_CF4
String EMISSIONS_CF4();
RcppExport SEXP _hector_EMISSIONS_CF4() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_CF4());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_C2F6
String EMISSIONS_C2F6();
RcppExport SEXP _hector_EMISSIONS_C2F6() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_C2F6());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_HFC23
String EMISSIONS_HFC23();
RcppExport SEXP _hector_EMISSIONS_HFC23() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_HFC23());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_HFC32
String EMISSIONS_HFC32();
RcppExport SEXP _hector_EMISSIONS_HFC32() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_HFC32());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_HFC4310
String EMISSIONS_HFC4310();
RcppExport SEXP _hector_EMISSIONS_HFC4310() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_HFC4310());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_HFC125
String EMISSIONS_HFC125();
RcppExport SEXP _hector_EMISSIONS_HFC125() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_HFC125());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_HFC134A
String EMISSIONS_HFC134A();
RcppExport SEXP _hector_EMISSIONS_HFC134A() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_HFC134A());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_HFC143A
String EMISSIONS_HFC143A();
RcppExport SEXP _hector_EMISSIONS_HFC143A() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_HFC143A());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_HFC227EA
String EMISSIONS_HFC227EA();
RcppExport SEXP _hector_EMISSIONS_HFC227EA() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_HFC227EA());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_HFC245FA
String EMISSIONS_HFC245FA();
RcppExport SEXP _hector_EMISSIONS_HFC245FA() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_HFC245FA());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_SF6
String EMISSIONS_SF6();
RcppExport SEXP _hector_EMISSIONS_SF6() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_SF6());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_CFC11
String EMISSIONS_CFC11();
RcppExport SEXP _hector_EMISSIONS_CFC11() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_CFC11());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_CFC12
String EMISSIONS_CFC12();
RcppExport SEXP _hector_EMISSIONS_CFC12() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_CFC12());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_CFC113
String EMISSIONS_CFC113();
RcppExport SEXP _hector_EMISSIONS_CFC113() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_CFC113());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_CFC114
String EMISSIONS_CFC114();
RcppExport SEXP _hector_EMISSIONS_CFC114() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_CFC114());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_CFC115
String EMISSIONS_CFC115();
RcppExport SEXP _hector_EMISSIONS_CFC115() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_CFC115());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_CCL4
String EMISSIONS_CCL4();
RcppExport SEXP _hector_EMISSIONS_CCL4() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_CCL4());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_CH3CCL3
String EMISSIONS_CH3CCL3();
RcppExport SEXP _hector_EMISSIONS_CH3CCL3() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_CH3CCL3());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_HCFC22
String EMISSIONS_HCFC22();
RcppExport SEXP _hector_EMISSIONS_HCFC22() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_HCFC22());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_HCFC141B
String EMISSIONS_HCFC141B();
RcppExport SEXP _hector_EMISSIONS_HCFC141B() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_HCFC141B());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_HCFC142B
String EMISSIONS_HCFC142B();
RcppExport SEXP _hector_EMISSIONS_HCFC142B() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_HCFC142B());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_HALON1211
String EMISSIONS_HALON1211();
RcppExport SEXP _hector_EMISSIONS_HALON1211() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_HALON1211());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_HALON1301
String EMISSIONS_HALON1301();
RcppExport SEXP _hector_EMISSIONS_HALON1301() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_HALON1301());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_HALON2402
String EMISSIONS_HALON2402();
RcppExport SEXP _hector_EMISSIONS_HALON2402() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_HALON2402());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_CH3CL
String EMISSIONS_CH3CL();
RcppExport SEXP _hector_EMISSIONS_CH3CL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_CH3CL());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_CH3BR
String EMISSIONS_CH3BR();
RcppExport SEXP _hector_EMISSIONS_CH3BR() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_CH3BR());
    return rcpp_result_gen;
END_RCPP
}
// CF4_CONSTRAIN
String CF4_CONSTRAIN();
RcppExport SEXP _hector_CF4_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CF4_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// C2F6_CONSTRAIN
String C2F6_CONSTRAIN();
RcppExport SEXP _hector_C2F6_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(C2F6_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// HFC23_CONSTRAIN
String HFC23_CONSTRAIN();
RcppExport SEXP _hector_HFC23_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(HFC23_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// HFC32_CONSTRAIN
String HFC32_CONSTRAIN();
RcppExport SEXP _hector_HFC32_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(HFC32_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// HFC4310_CONSTRAIN
String HFC4310_CONSTRAIN();
RcppExport SEXP _hector_HFC4310_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(HFC4310_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// HFC125_CONSTRAIN
String HFC125_CONSTRAIN();
RcppExport SEXP _hector_HFC125_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(HFC125_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// HFC134A_CONSTRAIN
String HFC134A_CONSTRAIN();
RcppExport SEXP _hector_HFC134A_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(HFC134A_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// HFC143A_CONSTRAIN
String HFC143A_CONSTRAIN();
RcppExport SEXP _hector_HFC143A_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(HFC143A_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// HFC227EA_CONSTRAIN
String HFC227EA_CONSTRAIN();
RcppExport SEXP _hector_HFC227EA_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(HFC227EA_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// HFC245FA_CONSTRAIN
String HFC245FA_CONSTRAIN();
RcppExport SEXP _hector_HFC245FA_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(HFC245FA_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// SF6_CONSTRAIN
String SF6_CONSTRAIN();
RcppExport SEXP _hector_SF6_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(SF6_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// CFC11_CONSTRAIN
String CFC11_CONSTRAIN();
RcppExport SEXP _hector_CFC11_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CFC11_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// CFC12_CONSTRAIN
String CFC12_CONSTRAIN();
RcppExport SEXP _hector_CFC12_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CFC12_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// CFC113_CONSTRAIN
String CFC113_CONSTRAIN();
RcppExport SEXP _hector_CFC113_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CFC113_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// CFC114_CONSTRAIN
String CFC114_CONSTRAIN();
RcppExport SEXP _hector_CFC114_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CFC114_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// CFC115_CONSTRAIN
String CFC115_CONSTRAIN();
RcppExport SEXP _hector_CFC115_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CFC115_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// CCL4_CONSTRAIN
String CCL4_CONSTRAIN();
RcppExport SEXP _hector_CCL4_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CCL4_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// CH3CCL3_CONSTRAIN
String CH3CCL3_CONSTRAIN();
RcppExport SEXP _hector_CH3CCL3_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CH3CCL3_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// HCFC22_CONSTRAIN
String HCFC22_CONSTRAIN();
RcppExport SEXP _hector_HCFC22_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(HCFC22_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// HCFC141B_CONSTRAIN
String HCFC141B_CONSTRAIN();
RcppExport SEXP _hector_HCFC141B_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(HCFC141B_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// HCFC142B_CONSTRAIN
String HCFC142B_CONSTRAIN();
RcppExport SEXP _hector_HCFC142B_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(HCFC142B_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// HALON1211_CONSTRAIN
String HALON1211_CONSTRAIN();
RcppExport SEXP _hector_HALON1211_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(HALON1211_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// HALON1301_CONSTRAIN
String HALON1301_CONSTRAIN();
RcppExport SEXP _hector_HALON1301_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(HALON1301_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// HALON2402_CONSTRAIN
String HALON2402_CONSTRAIN();
RcppExport SEXP _hector_HALON2402_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(HALON2402_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// CH3CL_CONSTRAIN
String CH3CL_CONSTRAIN();
RcppExport SEXP _hector_CH3CL_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CH3CL_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// CH3BR_CONSTRAIN
String CH3BR_CONSTRAIN();
RcppExport SEXP _hector_CH3BR_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CH3BR_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// CONCENTRATIONS_CH4
String CONCENTRATIONS_CH4();
RcppExport SEXP _hector_CONCENTRATIONS_CH4() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CONCENTRATIONS_CH4());
    return rcpp_result_gen;
END_RCPP
}
// CH4_CONSTRAIN
String CH4_CONSTRAIN();
RcppExport SEXP _hector_CH4_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CH4_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// PREINDUSTRIAL_CH4
String PREINDUSTRIAL_CH4();
RcppExport SEXP _hector_PREINDUSTRIAL_CH4() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(PREINDUSTRIAL_CH4());
    return rcpp_result_gen;
END_RCPP
}
// RF_CH4
String RF_CH4();
RcppExport SEXP _hector_RF_CH4() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RF_CH4());
    return rcpp_result_gen;
END_RCPP
}
// DELTA_CH4
String DELTA_CH4();
RcppExport SEXP _hector_DELTA_CH4() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DELTA_CH4());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_CH4
String EMISSIONS_CH4();
RcppExport SEXP _hector_EMISSIONS_CH4() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_CH4());
    return rcpp_result_gen;
END_RCPP
}
// NATURAL_CH4
String NATURAL_CH4();
RcppExport SEXP _hector_NATURAL_CH4() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(NATURAL_CH4());
    return rcpp_result_gen;
END_RCPP
}
// LIFETIME_SOIL
String LIFETIME_SOIL();
RcppExport SEXP _hector_LIFETIME_SOIL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(LIFETIME_SOIL());
    return rcpp_result_gen;
END_RCPP
}
// LIFETIME_STRAT
String LIFETIME_STRAT();
RcppExport SEXP _hector_LIFETIME_STRAT() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(LIFETIME_STRAT());
    return rcpp_result_gen;
END_RCPP
}
// CONCENTRATIONS_N2O
String CONCENTRATIONS_N2O();
RcppExport SEXP _hector_CONCENTRATIONS_N2O() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CONCENTRATIONS_N2O());
    return rcpp_result_gen;
END_RCPP
}
// PREINDUSTRIAL_N2O
String PREINDUSTRIAL_N2O();
RcppExport SEXP _hector_PREINDUSTRIAL_N2O() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(PREINDUSTRIAL_N2O());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_N2O
String EMISSIONS_N2O();
RcppExport SEXP _hector_EMISSIONS_N2O() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_N2O());
    return rcpp_result_gen;
END_RCPP
}
// NAT_EMISSIONS_N2O
String NAT_EMISSIONS_N2O();
RcppExport SEXP _hector_NAT_EMISSIONS_N2O() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(NAT_EMISSIONS_N2O());
    return rcpp_result_gen;
END_RCPP
}
// N2O_CONSTRAIN
String N2O_CONSTRAIN();
RcppExport SEXP _hector_N2O_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(N2O_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// PREINDUSTRIAL_O3
String PREINDUSTRIAL_O3();
RcppExport SEXP _hector_PREINDUSTRIAL_O3() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(PREINDUSTRIAL_O3());
    return rcpp_result_gen;
END_RCPP
}
// CONCENTRATIONS_O3
String CONCENTRATIONS_O3();
RcppExport SEXP _hector_CONCENTRATIONS_O3() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CONCENTRATIONS_O3());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_NOX
String EMISSIONS_NOX();
RcppExport SEXP _hector_EMISSIONS_NOX() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_NOX());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_CO
String EMISSIONS_CO();
RcppExport SEXP _hector_EMISSIONS_CO() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_CO());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_NMVOC
String EMISSIONS_NMVOC();
RcppExport SEXP _hector_EMISSIONS_NMVOC() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_NMVOC());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_OC
String EMISSIONS_OC();
RcppExport SEXP _hector_EMISSIONS_OC() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_OC());
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_NH3
String EMISSIONS_NH3();
RcppExport SEXP _hector_EMISSIONS_NH3() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_NH3());
    return rcpp_result_gen;
END_RCPP
}
// OCEAN_UPTAKE
String OCEAN_UPTAKE();
RcppExport SEXP _hector_OCEAN_UPTAKE() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(OCEAN_UPTAKE());
    return rcpp_result_gen;
END_RCPP
}
// OCEAN_C
String OCEAN_C();
RcppExport SEXP _hector_OCEAN_C() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(OCEAN_C());
    return rcpp_result_gen;
END_RCPP
}
// OCEAN_C_HL
String OCEAN_C_HL();
RcppExport SEXP _hector_OCEAN_C_HL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(OCEAN_C_HL());
    return rcpp_result_gen;
END_RCPP
}
// OCEAN_C_LL
String OCEAN_C_LL();
RcppExport SEXP _hector_OCEAN_C_LL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(OCEAN_C_LL());
    return rcpp_result_gen;
END_RCPP
}
// OCEAN_C_ML
String OCEAN_C_ML();
RcppExport SEXP _hector_OCEAN_C_ML() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(OCEAN_C_ML());
    return rcpp_result_gen;
END_RCPP
}
// OCEAN_C_IO
String OCEAN_C_IO();
RcppExport SEXP _hector_OCEAN_C_IO() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(OCEAN_C_IO());
    return rcpp_result_gen;
END_RCPP
}
// OCEAN_C_DO
String OCEAN_C_DO();
RcppExport SEXP _hector_OCEAN_C_DO() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(OCEAN_C_DO());
    return rcpp_result_gen;
END_RCPP
}
// OCEAN_PREIND_C_SURF
String OCEAN_PREIND_C_SURF();
RcppExport SEXP _hector_OCEAN_PREIND_C_SURF() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(OCEAN_PREIND_C_SURF());
    return rcpp_result_gen;
END_RCPP
}
// OCEAN_PREIND_C_ID
String OCEAN_PREIND_C_ID();
RcppExport SEXP _hector_OCEAN_PREIND_C_ID() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(OCEAN_PREIND_C_ID());
    return rcpp_result_gen;
END_RCPP
}
// TT
String TT();
RcppExport SEXP _hector_TT() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TT());
    return rcpp_result_gen;
END_RCPP
}
// TU
String TU();
RcppExport SEXP _hector_TU() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TU());
    return rcpp_result_gen;
END_RCPP
}
// TWI
String TWI();
RcppExport SEXP _hector_TWI() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TWI());
    return rcpp_result_gen;
END_RCPP
}
// TID
String TID();
RcppExport SEXP _hector_TID() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TID());
    return rcpp_result_gen;
END_RCPP
}
// PH_HL
String PH_HL();
RcppExport SEXP _hector_PH_HL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(PH_HL());
    return rcpp_result_gen;
END_RCPP
}
// PH_LL
String PH_LL();
RcppExport SEXP _hector_PH_LL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(PH_LL());
    return rcpp_result_gen;
END_RCPP
}
// PH
String PH();
RcppExport SEXP _hector_PH() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(PH());
    return rcpp_result_gen;
END_RCPP
}
// HL_OCEAN_UPTAKE
String HL_OCEAN_UPTAKE();
RcppExport SEXP _hector_HL_OCEAN_UPTAKE() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(HL_OCEAN_UPTAKE());
    return rcpp_result_gen;
END_RCPP
}
// LL_OCEAN_UPTAKE
String LL_OCEAN_UPTAKE();
RcppExport SEXP _hector_LL_OCEAN_UPTAKE() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(LL_OCEAN_UPTAKE());
    return rcpp_result_gen;
END_RCPP
}
// PCO2_HL
String PCO2_HL();
RcppExport SEXP _hector_PCO2_HL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(PCO2_HL());
    return rcpp_result_gen;
END_RCPP
}
// PCO2_LL
String PCO2_LL();
RcppExport SEXP _hector_PCO2_LL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(PCO2_LL());
    return rcpp_result_gen;
END_RCPP
}
// PCO2
String PCO2();
RcppExport SEXP _hector_PCO2() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(PCO2());
    return rcpp_result_gen;
END_RCPP
}
// DIC_HL
String DIC_HL();
RcppExport SEXP _hector_DIC_HL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DIC_HL());
    return rcpp_result_gen;
END_RCPP
}
// DIC
String DIC();
RcppExport SEXP _hector_DIC() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DIC());
    return rcpp_result_gen;
END_RCPP
}
// DIC_LL
String DIC_LL();
RcppExport SEXP _hector_DIC_LL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DIC_LL());
    return rcpp_result_gen;
END_RCPP
}
// SST_HL
String SST_HL();
RcppExport SEXP _hector_SST_HL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(SST_HL());
    return rcpp_result_gen;
END_RCPP
}
// SST_LL
String SST_LL();
RcppExport SEXP _hector_SST_LL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(SST_LL());
    return rcpp_result_gen;
END_RCPP
}
// CO3_LL
String CO3_LL();
RcppExport SEXP _hector_CO3_LL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CO3_LL());
    return rcpp_result_gen;
END_RCPP
}
// CO3_HL
String CO3_HL();
RcppExport SEXP _hector_CO3_HL() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CO3_HL());
    return rcpp_result_gen;
END_RCPP
}
// CO3
String CO3();
RcppExport SEXP _hector_CO3() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CO3());
    return rcpp_result_gen;
END_RCPP
}
// NBP
String NBP();
RcppExport SEXP _hector_NBP() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(NBP());
    return rcpp_result_gen;
END_RCPP
}
// CONCENTRATIONS_CO2
String CONCENTRATIONS_CO2();
RcppExport SEXP _hector_CONCENTRATIONS_CO2() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CONCENTRATIONS_CO2());
    return rcpp_result_gen;
END_RCPP
}
// NPP
String NPP();
RcppExport SEXP _hector_NPP() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(NPP());
    return rcpp_result_gen;
END_RCPP
}
// RH
String RH();
RcppExport SEXP _hector_RH() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(RH());
    return rcpp_result_gen;
END_RCPP
}
// PREINDUSTRIAL_CO2
String PREINDUSTRIAL_CO2();
RcppExport SEXP _hector_PREINDUSTRIAL_CO2() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(PREINDUSTRIAL_CO2());
    return rcpp_result_gen;
END_RCPP
}
// ATMOSPHERIC_CO2
String ATMOSPHERIC_CO2();
RcppExport SEXP _hector_ATMOSPHERIC_CO2() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(ATMOSPHERIC_CO2());
    return rcpp_result_gen;
END_RCPP
}
// FFI_EMISSIONS
String FFI_EMISSIONS();
RcppExport SEXP _hector_FFI_EMISSIONS() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(FFI_EMISSIONS());
    return rcpp_result_gen;
END_RCPP
}
// DACCS_UPTAKE
String DACCS_UPTAKE();
RcppExport SEXP _hector_DACCS_UPTAKE() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DACCS_UPTAKE());
    return rcpp_result_gen;
END_RCPP
}
// LUC_EMISSIONS
String LUC_EMISSIONS();
RcppExport SEXP _hector_LUC_EMISSIONS() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(LUC_EMISSIONS());
    return rcpp_result_gen;
END_RCPP
}
// LUC_UPTAKE
String LUC_UPTAKE();
RcppExport SEXP _hector_LUC_UPTAKE() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(LUC_UPTAKE());
    return rcpp_result_gen;
END_RCPP
}
// BETA
String BETA(String biome);
RcppExport SEXP _hector_BETA(SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(BETA(biome));
    return rcpp_result_gen;
END_RCPP
}
// Q10_RH
String Q10_RH(String biome);
RcppExport SEXP _hector_Q10_RH(SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(Q10_RH(biome));
    return rcpp_result_gen;
END_RCPP
}
// WARMINGFACTOR
String WARMINGFACTOR(String biome);
RcppExport SEXP _hector_WARMINGFACTOR(SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(WARMINGFACTOR(biome));
    return rcpp_result_gen;
END_RCPP
}
// CO2_CONSTRAIN
String CO2_CONSTRAIN();
RcppExport SEXP _hector_CO2_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(CO2_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// NBP_CONSTRAIN
String NBP_CONSTRAIN();
RcppExport SEXP _hector_NBP_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(NBP_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// F_NPPV
String F_NPPV(String biome);
RcppExport SEXP _hector_F_NPPV(SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(F_NPPV(biome));
    return rcpp_result_gen;
END_RCPP
}
// F_NPPD
String F_NPPD(String biome);
RcppExport SEXP _hector_F_NPPD(SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(F_NPPD(biome));
    return rcpp_result_gen;
END_RCPP
}
// F_LITTERD
String F_LITTERD(String biome);
RcppExport SEXP _hector_F_LITTERD(SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(F_LITTERD(biome));
    return rcpp_result_gen;
END_RCPP
}
// VEG_C
String VEG_C(String biome);
RcppExport SEXP _hector_VEG_C(SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(VEG_C(biome));
    return rcpp_result_gen;
END_RCPP
}
// DETRITUS_C
String DETRITUS_C(String biome);
RcppExport SEXP _hector_DETRITUS_C(SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(DETRITUS_C(biome));
    return rcpp_result_gen;
END_RCPP
}
// SOIL_C
String SOIL_C(String biome);
RcppExport SEXP _hector_SOIL_C(SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(SOIL_C(biome));
    return rcpp_result_gen;
END_RCPP
}
// PERMAFROST_C
String PERMAFROST_C(String biome);
RcppExport SEXP _hector_PERMAFROST_C(SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(PERMAFROST_C(biome));
    return rcpp_result_gen;
END_RCPP
}
// THAWEDP_C
String THAWEDP_C(String biome);
RcppExport SEXP _hector_THAWEDP_C(SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(THAWEDP_C(biome));
    return rcpp_result_gen;
END_RCPP
}
// FRAC_FROZEN
String FRAC_FROZEN(String biome);
RcppExport SEXP _hector_FRAC_FROZEN(SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(FRAC_FROZEN(biome));
    return rcpp_result_gen;
END_RCPP
}
// FRAC_STATIC
String FRAC_STATIC(String biome);
RcppExport SEXP _hector_FRAC_STATIC(SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(FRAC_STATIC(biome));
    return rcpp_result_gen;
END_RCPP
}
// PERMAFROST_MU
String PERMAFROST_MU(String biome);
RcppExport SEXP _hector_PERMAFROST_MU(SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(PERMAFROST_MU(biome));
    return rcpp_result_gen;
END_RCPP
}
// PERMAFROST_SIGMA
String PERMAFROST_SIGMA(String biome);
RcppExport SEXP _hector_PERMAFROST_SIGMA(SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(PERMAFROST_SIGMA(biome));
    return rcpp_result_gen;
END_RCPP
}
// FRAC_DECOMP_CH4
String FRAC_DECOMP_CH4(String biome);
RcppExport SEXP _hector_FRAC_DECOMP_CH4(SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(FRAC_DECOMP_CH4(biome));
    return rcpp_result_gen;
END_RCPP
}
// EARTH_C
String EARTH_C();
RcppExport SEXP _hector_EARTH_C() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EARTH_C());
    return rcpp_result_gen;
END_RCPP
}
// NPP_FLUX0
String NPP_FLUX0(String biome);
RcppExport SEXP _hector_NPP_FLUX0(SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(NPP_FLUX0(biome));
    return rcpp_result_gen;
END_RCPP
}
// EMISSIONS_SO2
String EMISSIONS_SO2();
RcppExport SEXP _hector_EMISSIONS_SO2() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(EMISSIONS_SO2());
    return rcpp_result_gen;
END_RCPP
}
// VOLCANIC_SO2
String VOLCANIC_SO2();
RcppExport SEXP _hector_VOLCANIC_SO2() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(VOLCANIC_SO2());
    return rcpp_result_gen;
END_RCPP
}
// ECS
String ECS();
RcppExport SEXP _hector_ECS() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(ECS());
    return rcpp_result_gen;
END_RCPP
}
// AERO_SCALE
String AERO_SCALE();
RcppExport SEXP _hector_AERO_SCALE() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(AERO_SCALE());
    return rcpp_result_gen;
END_RCPP
}
// VOLCANIC_SCALE
String VOLCANIC_SCALE();
RcppExport SEXP _hector_VOLCANIC_SCALE() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(VOLCANIC_SCALE());
    return rcpp_result_gen;
END_RCPP
}
// GLOBAL_TAS
String GLOBAL_TAS();
RcppExport SEXP _hector_GLOBAL_TAS() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(GLOBAL_TAS());
    return rcpp_result_gen;
END_RCPP
}
// SST
String SST();
RcppExport SEXP _hector_SST() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(SST());
    return rcpp_result_gen;
END_RCPP
}
// OCEAN_TAS
String OCEAN_TAS();
RcppExport SEXP _hector_OCEAN_TAS() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(OCEAN_TAS());
    return rcpp_result_gen;
END_RCPP
}
// LAND_TAS
String LAND_TAS();
RcppExport SEXP _hector_LAND_TAS() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(LAND_TAS());
    return rcpp_result_gen;
END_RCPP
}
// LO_WARMING_RATIO
String LO_WARMING_RATIO();
RcppExport SEXP _hector_LO_WARMING_RATIO() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(LO_WARMING_RATIO());
    return rcpp_result_gen;
END_RCPP
}
// TAS_CONSTRAIN
String TAS_CONSTRAIN();
RcppExport SEXP _hector_TAS_CONSTRAIN() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(TAS_CONSTRAIN());
    return rcpp_result_gen;
END_RCPP
}
// DIFFUSIVITY
String DIFFUSIVITY();
RcppExport SEXP _hector_DIFFUSIVITY() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(DIFFUSIVITY());
    return rcpp_result_gen;
END_RCPP
}
// FLUX_MIXED
String FLUX_MIXED();
RcppExport SEXP _hector_FLUX_MIXED() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(FLUX_MIXED());
    return rcpp_result_gen;
END_RCPP
}
// FLUX_INTERIOR
String FLUX_INTERIOR();
RcppExport SEXP _hector_FLUX_INTERIOR() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(FLUX_INTERIOR());
    return rcpp_result_gen;
END_RCPP
}
// HEAT_FLUX
String HEAT_FLUX();
RcppExport SEXP _hector_HEAT_FLUX() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(HEAT_FLUX());
    return rcpp_result_gen;
END_RCPP
}
// newcore_impl
Environment newcore_impl(String inifile, int loglevel, bool suppresslogging, String name);
RcppExport SEXP _hector_newcore_impl(SEXP inifileSEXP, SEXP loglevelSEXP, SEXP suppressloggingSEXP, SEXP nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type inifile(inifileSEXP);
    Rcpp::traits::input_parameter< int >::type loglevel(loglevelSEXP);
    Rcpp::traits::input_parameter< bool >::type suppresslogging(suppressloggingSEXP);
    Rcpp::traits::input_parameter< String >::type name(nameSEXP);
    rcpp_result_gen = Rcpp::wrap(newcore_impl(inifile, loglevel, suppresslogging, name));
    return rcpp_result_gen;
END_RCPP
}
// shutdown
Environment shutdown(Environment core);
RcppExport SEXP _hector_shutdown(SEXP coreSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type core(coreSEXP);
    rcpp_result_gen = Rcpp::wrap(shutdown(core));
    return rcpp_result_gen;
END_RCPP
}
// reset
Environment reset(Environment core, double date);
RcppExport SEXP _hector_reset(SEXP coreSEXP, SEXP dateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type core(coreSEXP);
    Rcpp::traits::input_parameter< double >::type date(dateSEXP);
    rcpp_result_gen = Rcpp::wrap(reset(core, date));
    return rcpp_result_gen;
END_RCPP
}
// run
Environment run(Environment core, double runtodate);
RcppExport SEXP _hector_run(SEXP coreSEXP, SEXP runtodateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type core(coreSEXP);
    Rcpp::traits::input_parameter< double >::type runtodate(runtodateSEXP);
    rcpp_result_gen = Rcpp::wrap(run(core, runtodate));
    return rcpp_result_gen;
END_RCPP
}
// getdate
double getdate(Environment core);
RcppExport SEXP _hector_getdate(SEXP coreSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type core(coreSEXP);
    rcpp_result_gen = Rcpp::wrap(getdate(core));
    return rcpp_result_gen;
END_RCPP
}
// get_tracking_data_impl
std::string get_tracking_data_impl(Environment core);
RcppExport SEXP _hector_get_tracking_data_impl(SEXP coreSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type core(coreSEXP);
    rcpp_result_gen = Rcpp::wrap(get_tracking_data_impl(core));
    return rcpp_result_gen;
END_RCPP
}
// get_biome_list
std::vector<std::string> get_biome_list(Environment core);
RcppExport SEXP _hector_get_biome_list(SEXP coreSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type core(coreSEXP);
    rcpp_result_gen = Rcpp::wrap(get_biome_list(core));
    return rcpp_result_gen;
END_RCPP
}
// create_biome_impl
Environment create_biome_impl(Environment core, std::string biome);
RcppExport SEXP _hector_create_biome_impl(SEXP coreSEXP, SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type core(coreSEXP);
    Rcpp::traits::input_parameter< std::string >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(create_biome_impl(core, biome));
    return rcpp_result_gen;
END_RCPP
}
// delete_biome_impl
Environment delete_biome_impl(Environment core, std::string biome);
RcppExport SEXP _hector_delete_biome_impl(SEXP coreSEXP, SEXP biomeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type core(coreSEXP);
    Rcpp::traits::input_parameter< std::string >::type biome(biomeSEXP);
    rcpp_result_gen = Rcpp::wrap(delete_biome_impl(core, biome));
    return rcpp_result_gen;
END_RCPP
}
// rename_biome
Environment rename_biome(Environment core, std::string oldname, std::string newname);
RcppExport SEXP _hector_rename_biome(SEXP coreSEXP, SEXP oldnameSEXP, SEXP newnameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type core(coreSEXP);
    Rcpp::traits::input_parameter< std::string >::type oldname(oldnameSEXP);
    Rcpp::traits::input_parameter< std::string >::type newname(newnameSEXP);
    rcpp_result_gen = Rcpp::wrap(rename_biome(core, oldname, newname));
    return rcpp_result_gen;
END_RCPP
}
// sendmessage
DataFrame sendmessage(Environment core, String msgtype, String capability, NumericVector date, NumericVector value, String unit);
RcppExport SEXP _hector_sendmessage(SEXP coreSEXP, SEXP msgtypeSEXP, SEXP capabilitySEXP, SEXP dateSEXP, SEXP valueSEXP, SEXP unitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type core(coreSEXP);
    Rcpp::traits::input_parameter< String >::type msgtype(msgtypeSEXP);
    Rcpp::traits::input_parameter< String >::type capability(capabilitySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type date(dateSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type value(valueSEXP);
    Rcpp::traits::input_parameter< String >::type unit(unitSEXP);
    rcpp_result_gen = Rcpp::wrap(sendmessage(core, msgtype, capability, date, value, unit));
    return rcpp_result_gen;
END_RCPP
}
// chk_core_valid
bool chk_core_valid(Environment core);
RcppExport SEXP _hector_chk_core_valid(SEXP coreSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type core(coreSEXP);
    rcpp_result_gen = Rcpp::wrap(chk_core_valid(core));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hector_GETDATA", (DL_FUNC) &_hector_GETDATA, 0},
    {"_hector_SETDATA", (DL_FUNC) &_hector_SETDATA, 0},
    {"_hector_BIOME_SPLIT_CHAR", (DL_FUNC) &_hector_BIOME_SPLIT_CHAR, 0},
    {"_hector_LL_DEBUG", (DL_FUNC) &_hector_LL_DEBUG, 0},
    {"_hector_LL_NOTICE", (DL_FUNC) &_hector_LL_NOTICE, 0},
    {"_hector_LL_WARNING", (DL_FUNC) &_hector_LL_WARNING, 0},
    {"_hector_LL_SEVERE", (DL_FUNC) &_hector_LL_SEVERE, 0},
    {"_hector_TRACKING_DATE", (DL_FUNC) &_hector_TRACKING_DATE, 0},
    {"_hector_EMISSIONS_BC", (DL_FUNC) &_hector_EMISSIONS_BC, 0},
    {"_hector_RF_TOTAL", (DL_FUNC) &_hector_RF_TOTAL, 0},
    {"_hector_FTOT_CONSTRAIN", (DL_FUNC) &_hector_FTOT_CONSTRAIN, 0},
    {"_hector_RF_ALBEDO", (DL_FUNC) &_hector_RF_ALBEDO, 0},
    {"_hector_RF_CO2", (DL_FUNC) &_hector_RF_CO2, 0},
    {"_hector_DELTA_CO2", (DL_FUNC) &_hector_DELTA_CO2, 0},
    {"_hector_RF_N2O", (DL_FUNC) &_hector_RF_N2O, 0},
    {"_hector_DELTA_N2O", (DL_FUNC) &_hector_DELTA_N2O, 0},
    {"_hector_RF_H2O_STRAT", (DL_FUNC) &_hector_RF_H2O_STRAT, 0},
    {"_hector_RF_O3_TROP", (DL_FUNC) &_hector_RF_O3_TROP, 0},
    {"_hector_RF_BC", (DL_FUNC) &_hector_RF_BC, 0},
    {"_hector_RHO_BC", (DL_FUNC) &_hector_RHO_BC, 0},
    {"_hector_RF_OC", (DL_FUNC) &_hector_RF_OC, 0},
    {"_hector_RHO_OC", (DL_FUNC) &_hector_RHO_OC, 0},
    {"_hector_RF_NH3", (DL_FUNC) &_hector_RF_NH3, 0},
    {"_hector_RHO_NH3", (DL_FUNC) &_hector_RHO_NH3, 0},
    {"_hector_RF_SO2", (DL_FUNC) &_hector_RF_SO2, 0},
    {"_hector_RF_ACI", (DL_FUNC) &_hector_RF_ACI, 0},
    {"_hector_RHO_SO2", (DL_FUNC) &_hector_RHO_SO2, 0},
    {"_hector_RF_VOL", (DL_FUNC) &_hector_RF_VOL, 0},
    {"_hector_RF_MISC", (DL_FUNC) &_hector_RF_MISC, 0},
    {"_hector_RFADJ_PREFIX", (DL_FUNC) &_hector_RFADJ_PREFIX, 0},
    {"_hector_RF_PREFIX", (DL_FUNC) &_hector_RF_PREFIX, 0},
    {"_hector_RF_CF4", (DL_FUNC) &_hector_RF_CF4, 0},
    {"_hector_RF_C2F6", (DL_FUNC) &_hector_RF_C2F6, 0},
    {"_hector_RF_HFC23", (DL_FUNC) &_hector_RF_HFC23, 0},
    {"_hector_RF_HFC32", (DL_FUNC) &_hector_RF_HFC32, 0},
    {"_hector_RF_HFC4310", (DL_FUNC) &_hector_RF_HFC4310, 0},
    {"_hector_RF_HFC125", (DL_FUNC) &_hector_RF_HFC125, 0},
    {"_hector_RF_HFC134A", (DL_FUNC) &_hector_RF_HFC134A, 0},
    {"_hector_RF_HFC143A", (DL_FUNC) &_hector_RF_HFC143A, 0},
    {"_hector_RF_HFC227EA", (DL_FUNC) &_hector_RF_HFC227EA, 0},
    {"_hector_RF_HFC245FA", (DL_FUNC) &_hector_RF_HFC245FA, 0},
    {"_hector_RF_SF6", (DL_FUNC) &_hector_RF_SF6, 0},
    {"_hector_RF_CFC11", (DL_FUNC) &_hector_RF_CFC11, 0},
    {"_hector_RF_CFC12", (DL_FUNC) &_hector_RF_CFC12, 0},
    {"_hector_RF_CFC113", (DL_FUNC) &_hector_RF_CFC113, 0},
    {"_hector_RF_CFC114", (DL_FUNC) &_hector_RF_CFC114, 0},
    {"_hector_RF_CFC115", (DL_FUNC) &_hector_RF_CFC115, 0},
    {"_hector_RF_CCL4", (DL_FUNC) &_hector_RF_CCL4, 0},
    {"_hector_RF_CH3CCL3", (DL_FUNC) &_hector_RF_CH3CCL3, 0},
    {"_hector_RF_HCFC22", (DL_FUNC) &_hector_RF_HCFC22, 0},
    {"_hector_RF_HCFC141B", (DL_FUNC) &_hector_RF_HCFC141B, 0},
    {"_hector_RF_HCFC142B", (DL_FUNC) &_hector_RF_HCFC142B, 0},
    {"_hector_RF_HALON1211", (DL_FUNC) &_hector_RF_HALON1211, 0},
    {"_hector_RF_HALON1301", (DL_FUNC) &_hector_RF_HALON1301, 0},
    {"_hector_RF_HALON2402", (DL_FUNC) &_hector_RF_HALON2402, 0},
    {"_hector_RF_CH3CL", (DL_FUNC) &_hector_RF_CH3CL, 0},
    {"_hector_RF_CH3BR", (DL_FUNC) &_hector_RF_CH3BR, 0},
    {"_hector_RHO_CF4", (DL_FUNC) &_hector_RHO_CF4, 0},
    {"_hector_RHO_C2F6", (DL_FUNC) &_hector_RHO_C2F6, 0},
    {"_hector_RHO_HFC23", (DL_FUNC) &_hector_RHO_HFC23, 0},
    {"_hector_RHO_HFC32", (DL_FUNC) &_hector_RHO_HFC32, 0},
    {"_hector_RHO_HFC4310", (DL_FUNC) &_hector_RHO_HFC4310, 0},
    {"_hector_RHO_HFC125", (DL_FUNC) &_hector_RHO_HFC125, 0},
    {"_hector_RHO_HFC134A", (DL_FUNC) &_hector_RHO_HFC134A, 0},
    {"_hector_RHO_HFC143A", (DL_FUNC) &_hector_RHO_HFC143A, 0},
    {"_hector_RHO_HFC227EA", (DL_FUNC) &_hector_RHO_HFC227EA, 0},
    {"_hector_RHO_HFC245FA", (DL_FUNC) &_hector_RHO_HFC245FA, 0},
    {"_hector_RHO_SF6", (DL_FUNC) &_hector_RHO_SF6, 0},
    {"_hector_RHO_CFC11", (DL_FUNC) &_hector_RHO_CFC11, 0},
    {"_hector_RHO_CFC12", (DL_FUNC) &_hector_RHO_CFC12, 0},
    {"_hector_RHO_CFC113", (DL_FUNC) &_hector_RHO_CFC113, 0},
    {"_hector_RHO_CFC114", (DL_FUNC) &_hector_RHO_CFC114, 0},
    {"_hector_RHO_CFC115", (DL_FUNC) &_hector_RHO_CFC115, 0},
    {"_hector_RHO_CCL4", (DL_FUNC) &_hector_RHO_CCL4, 0},
    {"_hector_RHO_CH3CCL3", (DL_FUNC) &_hector_RHO_CH3CCL3, 0},
    {"_hector_RHO_HCFC22", (DL_FUNC) &_hector_RHO_HCFC22, 0},
    {"_hector_RHO_HCFC141B", (DL_FUNC) &_hector_RHO_HCFC141B, 0},
    {"_hector_RHO_HCFC142B", (DL_FUNC) &_hector_RHO_HCFC142B, 0},
    {"_hector_RHO_HALON1211", (DL_FUNC) &_hector_RHO_HALON1211, 0},
    {"_hector_RHO_HALON1301", (DL_FUNC) &_hector_RHO_HALON1301, 0},
    {"_hector_RHO_HALON2402", (DL_FUNC) &_hector_RHO_HALON2402, 0},
    {"_hector_RHO_CH3CL", (DL_FUNC) &_hector_RHO_CH3CL, 0},
    {"_hector_RHO_CH3BR", (DL_FUNC) &_hector_RHO_CH3BR, 0},
    {"_hector_DELTA_CF4", (DL_FUNC) &_hector_DELTA_CF4, 0},
    {"_hector_DELTA_C2F6", (DL_FUNC) &_hector_DELTA_C2F6, 0},
    {"_hector_DELTA_HFC23", (DL_FUNC) &_hector_DELTA_HFC23, 0},
    {"_hector_DELTA_HFC32", (DL_FUNC) &_hector_DELTA_HFC32, 0},
    {"_hector_DELTA_HFC4310", (DL_FUNC) &_hector_DELTA_HFC4310, 0},
    {"_hector_DELTA_HFC125", (DL_FUNC) &_hector_DELTA_HFC125, 0},
    {"_hector_DELTA_HFC134A", (DL_FUNC) &_hector_DELTA_HFC134A, 0},
    {"_hector_DELTA_HFC143A", (DL_FUNC) &_hector_DELTA_HFC143A, 0},
    {"_hector_DELTA_HFC227EA", (DL_FUNC) &_hector_DELTA_HFC227EA, 0},
    {"_hector_DELTA_HFC245FA", (DL_FUNC) &_hector_DELTA_HFC245FA, 0},
    {"_hector_DELTA_SF6", (DL_FUNC) &_hector_DELTA_SF6, 0},
    {"_hector_DELTA_CFC11", (DL_FUNC) &_hector_DELTA_CFC11, 0},
    {"_hector_DELTA_CFC12", (DL_FUNC) &_hector_DELTA_CFC12, 0},
    {"_hector_DELTA_CFC113", (DL_FUNC) &_hector_DELTA_CFC113, 0},
    {"_hector_DELTA_CFC114", (DL_FUNC) &_hector_DELTA_CFC114, 0},
    {"_hector_DELTA_CFC115", (DL_FUNC) &_hector_DELTA_CFC115, 0},
    {"_hector_DELTA_CCL4", (DL_FUNC) &_hector_DELTA_CCL4, 0},
    {"_hector_DELTA_CH3CCL3", (DL_FUNC) &_hector_DELTA_CH3CCL3, 0},
    {"_hector_DELTA_HCFC22", (DL_FUNC) &_hector_DELTA_HCFC22, 0},
    {"_hector_DELTA_HCFC141B", (DL_FUNC) &_hector_DELTA_HCFC141B, 0},
    {"_hector_DELTA_HCFC142B", (DL_FUNC) &_hector_DELTA_HCFC142B, 0},
    {"_hector_DELTA_HALON1211", (DL_FUNC) &_hector_DELTA_HALON1211, 0},
    {"_hector_DELTA_HALON1301", (DL_FUNC) &_hector_DELTA_HALON1301, 0},
    {"_hector_DELTA_HALON2402", (DL_FUNC) &_hector_DELTA_HALON2402, 0},
    {"_hector_DELTA_CH3CL", (DL_FUNC) &_hector_DELTA_CH3CL, 0},
    {"_hector_DELTA_CH3BR", (DL_FUNC) &_hector_DELTA_CH3BR, 0},
    {"_hector_Q_CO2", (DL_FUNC) &_hector_Q_CO2, 0},
    {"_hector_EMISSIONS_CF4", (DL_FUNC) &_hector_EMISSIONS_CF4, 0},
    {"_hector_EMISSIONS_C2F6", (DL_FUNC) &_hector_EMISSIONS_C2F6, 0},
    {"_hector_EMISSIONS_HFC23", (DL_FUNC) &_hector_EMISSIONS_HFC23, 0},
    {"_hector_EMISSIONS_HFC32", (DL_FUNC) &_hector_EMISSIONS_HFC32, 0},
    {"_hector_EMISSIONS_HFC4310", (DL_FUNC) &_hector_EMISSIONS_HFC4310, 0},
    {"_hector_EMISSIONS_HFC125", (DL_FUNC) &_hector_EMISSIONS_HFC125, 0},
    {"_hector_EMISSIONS_HFC134A", (DL_FUNC) &_hector_EMISSIONS_HFC134A, 0},
    {"_hector_EMISSIONS_HFC143A", (DL_FUNC) &_hector_EMISSIONS_HFC143A, 0},
    {"_hector_EMISSIONS_HFC227EA", (DL_FUNC) &_hector_EMISSIONS_HFC227EA, 0},
    {"_hector_EMISSIONS_HFC245FA", (DL_FUNC) &_hector_EMISSIONS_HFC245FA, 0},
    {"_hector_EMISSIONS_SF6", (DL_FUNC) &_hector_EMISSIONS_SF6, 0},
    {"_hector_EMISSIONS_CFC11", (DL_FUNC) &_hector_EMISSIONS_CFC11, 0},
    {"_hector_EMISSIONS_CFC12", (DL_FUNC) &_hector_EMISSIONS_CFC12, 0},
    {"_hector_EMISSIONS_CFC113", (DL_FUNC) &_hector_EMISSIONS_CFC113, 0},
    {"_hector_EMISSIONS_CFC114", (DL_FUNC) &_hector_EMISSIONS_CFC114, 0},
    {"_hector_EMISSIONS_CFC115", (DL_FUNC) &_hector_EMISSIONS_CFC115, 0},
    {"_hector_EMISSIONS_CCL4", (DL_FUNC) &_hector_EMISSIONS_CCL4, 0},
    {"_hector_EMISSIONS_CH3CCL3", (DL_FUNC) &_hector_EMISSIONS_CH3CCL3, 0},
    {"_hector_EMISSIONS_HCFC22", (DL_FUNC) &_hector_EMISSIONS_HCFC22, 0},
    {"_hector_EMISSIONS_HCFC141B", (DL_FUNC) &_hector_EMISSIONS_HCFC141B, 0},
    {"_hector_EMISSIONS_HCFC142B", (DL_FUNC) &_hector_EMISSIONS_HCFC142B, 0},
    {"_hector_EMISSIONS_HALON1211", (DL_FUNC) &_hector_EMISSIONS_HALON1211, 0},
    {"_hector_EMISSIONS_HALON1301", (DL_FUNC) &_hector_EMISSIONS_HALON1301, 0},
    {"_hector_EMISSIONS_HALON2402", (DL_FUNC) &_hector_EMISSIONS_HALON2402, 0},
    {"_hector_EMISSIONS_CH3CL", (DL_FUNC) &_hector_EMISSIONS_CH3CL, 0},
    {"_hector_EMISSIONS_CH3BR", (DL_FUNC) &_hector_EMISSIONS_CH3BR, 0},
    {"_hector_CF4_CONSTRAIN", (DL_FUNC) &_hector_CF4_CONSTRAIN, 0},
    {"_hector_C2F6_CONSTRAIN", (DL_FUNC) &_hector_C2F6_CONSTRAIN, 0},
    {"_hector_HFC23_CONSTRAIN", (DL_FUNC) &_hector_HFC23_CONSTRAIN, 0},
    {"_hector_HFC32_CONSTRAIN", (DL_FUNC) &_hector_HFC32_CONSTRAIN, 0},
    {"_hector_HFC4310_CONSTRAIN", (DL_FUNC) &_hector_HFC4310_CONSTRAIN, 0},
    {"_hector_HFC125_CONSTRAIN", (DL_FUNC) &_hector_HFC125_CONSTRAIN, 0},
    {"_hector_HFC134A_CONSTRAIN", (DL_FUNC) &_hector_HFC134A_CONSTRAIN, 0},
    {"_hector_HFC143A_CONSTRAIN", (DL_FUNC) &_hector_HFC143A_CONSTRAIN, 0},
    {"_hector_HFC227EA_CONSTRAIN", (DL_FUNC) &_hector_HFC227EA_CONSTRAIN, 0},
    {"_hector_HFC245FA_CONSTRAIN", (DL_FUNC) &_hector_HFC245FA_CONSTRAIN, 0},
    {"_hector_SF6_CONSTRAIN", (DL_FUNC) &_hector_SF6_CONSTRAIN, 0},
    {"_hector_CFC11_CONSTRAIN", (DL_FUNC) &_hector_CFC11_CONSTRAIN, 0},
    {"_hector_CFC12_CONSTRAIN", (DL_FUNC) &_hector_CFC12_CONSTRAIN, 0},
    {"_hector_CFC113_CONSTRAIN", (DL_FUNC) &_hector_CFC113_CONSTRAIN, 0},
    {"_hector_CFC114_CONSTRAIN", (DL_FUNC) &_hector_CFC114_CONSTRAIN, 0},
    {"_hector_CFC115_CONSTRAIN", (DL_FUNC) &_hector_CFC115_CONSTRAIN, 0},
    {"_hector_CCL4_CONSTRAIN", (DL_FUNC) &_hector_CCL4_CONSTRAIN, 0},
    {"_hector_CH3CCL3_CONSTRAIN", (DL_FUNC) &_hector_CH3CCL3_CONSTRAIN, 0},
    {"_hector_HCFC22_CONSTRAIN", (DL_FUNC) &_hector_HCFC22_CONSTRAIN, 0},
    {"_hector_HCFC141B_CONSTRAIN", (DL_FUNC) &_hector_HCFC141B_CONSTRAIN, 0},
    {"_hector_HCFC142B_CONSTRAIN", (DL_FUNC) &_hector_HCFC142B_CONSTRAIN, 0},
    {"_hector_HALON1211_CONSTRAIN", (DL_FUNC) &_hector_HALON1211_CONSTRAIN, 0},
    {"_hector_HALON1301_CONSTRAIN", (DL_FUNC) &_hector_HALON1301_CONSTRAIN, 0},
    {"_hector_HALON2402_CONSTRAIN", (DL_FUNC) &_hector_HALON2402_CONSTRAIN, 0},
    {"_hector_CH3CL_CONSTRAIN", (DL_FUNC) &_hector_CH3CL_CONSTRAIN, 0},
    {"_hector_CH3BR_CONSTRAIN", (DL_FUNC) &_hector_CH3BR_CONSTRAIN, 0},
    {"_hector_CONCENTRATIONS_CH4", (DL_FUNC) &_hector_CONCENTRATIONS_CH4, 0},
    {"_hector_CH4_CONSTRAIN", (DL_FUNC) &_hector_CH4_CONSTRAIN, 0},
    {"_hector_PREINDUSTRIAL_CH4", (DL_FUNC) &_hector_PREINDUSTRIAL_CH4, 0},
    {"_hector_RF_CH4", (DL_FUNC) &_hector_RF_CH4, 0},
    {"_hector_DELTA_CH4", (DL_FUNC) &_hector_DELTA_CH4, 0},
    {"_hector_EMISSIONS_CH4", (DL_FUNC) &_hector_EMISSIONS_CH4, 0},
    {"_hector_NATURAL_CH4", (DL_FUNC) &_hector_NATURAL_CH4, 0},
    {"_hector_LIFETIME_SOIL", (DL_FUNC) &_hector_LIFETIME_SOIL, 0},
    {"_hector_LIFETIME_STRAT", (DL_FUNC) &_hector_LIFETIME_STRAT, 0},
    {"_hector_CONCENTRATIONS_N2O", (DL_FUNC) &_hector_CONCENTRATIONS_N2O, 0},
    {"_hector_PREINDUSTRIAL_N2O", (DL_FUNC) &_hector_PREINDUSTRIAL_N2O, 0},
    {"_hector_EMISSIONS_N2O", (DL_FUNC) &_hector_EMISSIONS_N2O, 0},
    {"_hector_NAT_EMISSIONS_N2O", (DL_FUNC) &_hector_NAT_EMISSIONS_N2O, 0},
    {"_hector_N2O_CONSTRAIN", (DL_FUNC) &_hector_N2O_CONSTRAIN, 0},
    {"_hector_PREINDUSTRIAL_O3", (DL_FUNC) &_hector_PREINDUSTRIAL_O3, 0},
    {"_hector_CONCENTRATIONS_O3", (DL_FUNC) &_hector_CONCENTRATIONS_O3, 0},
    {"_hector_EMISSIONS_NOX", (DL_FUNC) &_hector_EMISSIONS_NOX, 0},
    {"_hector_EMISSIONS_CO", (DL_FUNC) &_hector_EMISSIONS_CO, 0},
    {"_hector_EMISSIONS_NMVOC", (DL_FUNC) &_hector_EMISSIONS_NMVOC, 0},
    {"_hector_EMISSIONS_OC", (DL_FUNC) &_hector_EMISSIONS_OC, 0},
    {"_hector_EMISSIONS_NH3", (DL_FUNC) &_hector_EMISSIONS_NH3, 0},
    {"_hector_OCEAN_UPTAKE", (DL_FUNC) &_hector_OCEAN_UPTAKE, 0},
    {"_hector_OCEAN_C", (DL_FUNC) &_hector_OCEAN_C, 0},
    {"_hector_OCEAN_C_HL", (DL_FUNC) &_hector_OCEAN_C_HL, 0},
    {"_hector_OCEAN_C_LL", (DL_FUNC) &_hector_OCEAN_C_LL, 0},
    {"_hector_OCEAN_C_ML", (DL_FUNC) &_hector_OCEAN_C_ML, 0},
    {"_hector_OCEAN_C_IO", (DL_FUNC) &_hector_OCEAN_C_IO, 0},
    {"_hector_OCEAN_C_DO", (DL_FUNC) &_hector_OCEAN_C_DO, 0},
    {"_hector_OCEAN_PREIND_C_SURF", (DL_FUNC) &_hector_OCEAN_PREIND_C_SURF, 0},
    {"_hector_OCEAN_PREIND_C_ID", (DL_FUNC) &_hector_OCEAN_PREIND_C_ID, 0},
    {"_hector_TT", (DL_FUNC) &_hector_TT, 0},
    {"_hector_TU", (DL_FUNC) &_hector_TU, 0},
    {"_hector_TWI", (DL_FUNC) &_hector_TWI, 0},
    {"_hector_TID", (DL_FUNC) &_hector_TID, 0},
    {"_hector_PH_HL", (DL_FUNC) &_hector_PH_HL, 0},
    {"_hector_PH_LL", (DL_FUNC) &_hector_PH_LL, 0},
    {"_hector_PH", (DL_FUNC) &_hector_PH, 0},
    {"_hector_HL_OCEAN_UPTAKE", (DL_FUNC) &_hector_HL_OCEAN_UPTAKE, 0},
    {"_hector_LL_OCEAN_UPTAKE", (DL_FUNC) &_hector_LL_OCEAN_UPTAKE, 0},
    {"_hector_PCO2_HL", (DL_FUNC) &_hector_PCO2_HL, 0},
    {"_hector_PCO2_LL", (DL_FUNC) &_hector_PCO2_LL, 0},
    {"_hector_PCO2", (DL_FUNC) &_hector_PCO2, 0},
    {"_hector_DIC_HL", (DL_FUNC) &_hector_DIC_HL, 0},
    {"_hector_DIC", (DL_FUNC) &_hector_DIC, 0},
    {"_hector_DIC_LL", (DL_FUNC) &_hector_DIC_LL, 0},
    {"_hector_SST_HL", (DL_FUNC) &_hector_SST_HL, 0},
    {"_hector_SST_LL", (DL_FUNC) &_hector_SST_LL, 0},
    {"_hector_CO3_LL", (DL_FUNC) &_hector_CO3_LL, 0},
    {"_hector_CO3_HL", (DL_FUNC) &_hector_CO3_HL, 0},
    {"_hector_CO3", (DL_FUNC) &_hector_CO3, 0},
    {"_hector_NBP", (DL_FUNC) &_hector_NBP, 0},
    {"_hector_CONCENTRATIONS_CO2", (DL_FUNC) &_hector_CONCENTRATIONS_CO2, 0},
    {"_hector_NPP", (DL_FUNC) &_hector_NPP, 0},
    {"_hector_RH", (DL_FUNC) &_hector_RH, 0},
    {"_hector_PREINDUSTRIAL_CO2", (DL_FUNC) &_hector_PREINDUSTRIAL_CO2, 0},
    {"_hector_ATMOSPHERIC_CO2", (DL_FUNC) &_hector_ATMOSPHERIC_CO2, 0},
    {"_hector_FFI_EMISSIONS", (DL_FUNC) &_hector_FFI_EMISSIONS, 0},
    {"_hector_DACCS_UPTAKE", (DL_FUNC) &_hector_DACCS_UPTAKE, 0},
    {"_hector_LUC_EMISSIONS", (DL_FUNC) &_hector_LUC_EMISSIONS, 0},
    {"_hector_LUC_UPTAKE", (DL_FUNC) &_hector_LUC_UPTAKE, 0},
    {"_hector_BETA", (DL_FUNC) &_hector_BETA, 1},
    {"_hector_Q10_RH", (DL_FUNC) &_hector_Q10_RH, 1},
    {"_hector_WARMINGFACTOR", (DL_FUNC) &_hector_WARMINGFACTOR, 1},
    {"_hector_CO2_CONSTRAIN", (DL_FUNC) &_hector_CO2_CONSTRAIN, 0},
    {"_hector_NBP_CONSTRAIN", (DL_FUNC) &_hector_NBP_CONSTRAIN, 0},
    {"_hector_F_NPPV", (DL_FUNC) &_hector_F_NPPV, 1},
    {"_hector_F_NPPD", (DL_FUNC) &_hector_F_NPPD, 1},
    {"_hector_F_LITTERD", (DL_FUNC) &_hector_F_LITTERD, 1},
    {"_hector_VEG_C", (DL_FUNC) &_hector_VEG_C, 1},
    {"_hector_DETRITUS_C", (DL_FUNC) &_hector_DETRITUS_C, 1},
    {"_hector_SOIL_C", (DL_FUNC) &_hector_SOIL_C, 1},
    {"_hector_PERMAFROST_C", (DL_FUNC) &_hector_PERMAFROST_C, 1},
    {"_hector_THAWEDP_C", (DL_FUNC) &_hector_THAWEDP_C, 1},
    {"_hector_FRAC_FROZEN", (DL_FUNC) &_hector_FRAC_FROZEN, 1},
    {"_hector_FRAC_STATIC", (DL_FUNC) &_hector_FRAC_STATIC, 1},
    {"_hector_PERMAFROST_MU", (DL_FUNC) &_hector_PERMAFROST_MU, 1},
    {"_hector_PERMAFROST_SIGMA", (DL_FUNC) &_hector_PERMAFROST_SIGMA, 1},
    {"_hector_FRAC_DECOMP_CH4", (DL_FUNC) &_hector_FRAC_DECOMP_CH4, 1},
    {"_hector_EARTH_C", (DL_FUNC) &_hector_EARTH_C, 0},
    {"_hector_NPP_FLUX0", (DL_FUNC) &_hector_NPP_FLUX0, 1},
    {"_hector_EMISSIONS_SO2", (DL_FUNC) &_hector_EMISSIONS_SO2, 0},
    {"_hector_VOLCANIC_SO2", (DL_FUNC) &_hector_VOLCANIC_SO2, 0},
    {"_hector_ECS", (DL_FUNC) &_hector_ECS, 0},
    {"_hector_AERO_SCALE", (DL_FUNC) &_hector_AERO_SCALE, 0},
    {"_hector_VOLCANIC_SCALE", (DL_FUNC) &_hector_VOLCANIC_SCALE, 0},
    {"_hector_GLOBAL_TAS", (DL_FUNC) &_hector_GLOBAL_TAS, 0},
    {"_hector_SST", (DL_FUNC) &_hector_SST, 0},
    {"_hector_OCEAN_TAS", (DL_FUNC) &_hector_OCEAN_TAS, 0},
    {"_hector_LAND_TAS", (DL_FUNC) &_hector_LAND_TAS, 0},
    {"_hector_LO_WARMING_RATIO", (DL_FUNC) &_hector_LO_WARMING_RATIO, 0},
    {"_hector_TAS_CONSTRAIN", (DL_FUNC) &_hector_TAS_CONSTRAIN, 0},
    {"_hector_DIFFUSIVITY", (DL_FUNC) &_hector_DIFFUSIVITY, 0},
    {"_hector_FLUX_MIXED", (DL_FUNC) &_hector_FLUX_MIXED, 0},
    {"_hector_FLUX_INTERIOR", (DL_FUNC) &_hector_FLUX_INTERIOR, 0},
    {"_hector_HEAT_FLUX", (DL_FUNC) &_hector_HEAT_FLUX, 0},
    {"_hector_newcore_impl", (DL_FUNC) &_hector_newcore_impl, 4},
    {"_hector_shutdown", (DL_FUNC) &_hector_shutdown, 1},
    {"_hector_reset", (DL_FUNC) &_hector_reset, 2},
    {"_hector_run", (DL_FUNC) &_hector_run, 2},
    {"_hector_getdate", (DL_FUNC) &_hector_getdate, 1},
    {"_hector_get_tracking_data_impl", (DL_FUNC) &_hector_get_tracking_data_impl, 1},
    {"_hector_get_biome_list", (DL_FUNC) &_hector_get_biome_list, 1},
    {"_hector_create_biome_impl", (DL_FUNC) &_hector_create_biome_impl, 2},
    {"_hector_delete_biome_impl", (DL_FUNC) &_hector_delete_biome_impl, 2},
    {"_hector_rename_biome", (DL_FUNC) &_hector_rename_biome, 3},
    {"_hector_sendmessage", (DL_FUNC) &_hector_sendmessage, 6},
    {"_hector_chk_core_valid", (DL_FUNC) &_hector_chk_core_valid, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_hector(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
